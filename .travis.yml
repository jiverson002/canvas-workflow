language: ruby

# Enable caching the bundle between builds
cache: bundler

# branch whitelist
branches:
  only:
    - master # test only the master branch

# Assume bundler is being used, therefore the `install` step will run `bundle
# install` by default.
#
# The order of the steps below is significant.
script:
  # initialize environment
  - EXITCODE=0 ; (exit $EXITCODE)
  # apply patches
  - test $EXITCODE -eq 0 && (patch --dry-run --reverse --silent --force ${BUNDLE_PATH:-vendor/bundle}/ruby/*/gems/pandarus-0.7.0/lib/pandarus/api_base.rb < _patches/api_base.rb || patch ${BUNDLE_PATH:-vendor/bundle}/ruby/*/gems/pandarus-0.7.0/lib/pandarus/api_base.rb < _patches/api_base.rb ; EXITCODE=$? ; (exit $EXITCODE))
  - test $EXITCODE -eq 0 && (patch --dry-run --reverse --silent --force ${BUNDLE_PATH:-vendor/bundle}/ruby/*/gems/pandarus-0.7.0/lib/pandarus/v1_api.rb < _patches/v1_api.rb || patch ${BUNDLE_PATH:-vendor/bundle}/ruby/*/gems/pandarus-0.7.0/lib/pandarus/v1_api.rb < _patches/v1_api.rb) ; EXITCODE=$? ; (exit $EXITCODE)
  # upload files to canvas
  - test $EXITCODE -eq 0 && bundle exec ruby _scripts/upload.rb ; EXITCODE=$? ; (exit $EXITCODE)
  # build site
  - test $EXITCODE -eq 0 && bundle exec jekyll build --verbose ; EXITCODE=$? ; (exit $EXITCODE)
  # deploy site to canvas
  - test $EXITCODE -eq 0 && bundle exec ruby _scripts/deploy.rb ; EXITCODE=$? ; (exit $EXITCODE)

sudo: false
